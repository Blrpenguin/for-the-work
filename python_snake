

import pygame,sys,random
from pygame.math import Vector2
    


pygame.init()
cell_size = 30
cell_number  = 20
screen = pygame.display.set_mode((cell_number*cell_size,cell_number*cell_size))
clock = pygame.time.Clock()

SCREEN_UPDATE = pygame.USEREVENT
pygame.time.set_timer(SCREEN_UPDATE,200)

class FRUIT:
    def __init__(self):
        self.x = random.randint(0,cell_number-1)
        self.y = random.randint(0,cell_number-1)
        self.pos = Vector2(self.x,self.y)
    
    def draw_fruit(self):
        x_pos1 = int(self.pos.x*cell_size)
        y_pos1 = int(self.pos.y*cell_size)
        fruit_rect = pygame.Rect(x_pos1,y_pos1,cell_size,cell_size)
        pygame.draw.rect(screen,(174,13,144),fruit_rect)
        
    def randomize(self):
        self.x = random.randint(0,cell_number-1)
        self.y = random.randint(0,cell_number-1)
        self.pos = Vector2(self.x,self.y)


class SNAKE:
    def __init__(self):
        self.body = [Vector2(7,10),Vector2(6,10),Vector2(5,10)]
        self.direction = Vector2(1,0)
        self.new_block = False
        
    def draw_snake(self):
        for block in self.body:
            x_pos2 = int(block.x*cell_size)
            y_pos2 = int(block.y*cell_size)
            block_rect = pygame.Rect(x_pos2, y_pos2,cell_size,cell_size)
            pygame.draw.rect(screen,(133,191,122),block_rect)
            
    def move_snake(self):
        if self.new_block == True:
            body_copy = self.body[:]
            body_copy.insert(0,body_copy[0] + self.direction)
            self.body = body_copy[:]
            self.new_block = False
        else:
            if self.body[0].x == -1:
                body_copy = self.body[:-1]
                self.body[0].x = cell_number-1
                body_copy.insert(0,body_copy[0] + self.direction)
                self.body = body_copy[:]
            if self.body[0].y == -1:
                body_copy = self.body[:-1]
                self.body[0].y = cell_number-1
                body_copy.insert(0,body_copy[0] + self.direction)
                
                self.body = body_copy[:]
            if self.body[0].x == cell_number:
                body_copy = self.body[:-1]
                self.body[0].x = 0
                body_copy.insert(0,body_copy[0] + self.direction)
                self.body = body_copy[:]
            if self.body[0].y == cell_number:
                body_copy = self.body[:-1]
                self.body[0].y = 0
                body_copy.insert(0,body_copy[0] + self.direction)
                self.body = body_copy[:]
            else:
                body_copy = self.body[:-1]
                body_copy.insert(0,body_copy[0] + self.direction)
                self.body = body_copy[:]
        
    def add(self):
        self.new_block = True

class MAIN:
    def __init__(self):
        self.snake = SNAKE()
        self.fruit = FRUIT()
        
    def update(self):
        self.snake.move_snake()
        self.eat()
        self.fail()
          
    def draw_new(self):
        self.fruit.draw_fruit()
        self.snake.draw_snake()
        
    def eat(self):
        if self.fruit.pos == self.snake.body[0]:
            self.fruit.randomize()
            self.snake.add()
            
    def fail(self):
        for block in self.snake.body[1:]:
            if self.snake.body[0] == block:
                self.gameover()
                
    def gameover(self):
        pygame.quit()
        sys.exit()
        

main_game = MAIN()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
            
        if event.type == SCREEN_UPDATE:
            main_game.update()
            
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                if not main_game.snake.direction == Vector2(0,1):
                    main_game.snake.direction = Vector2(0,-1)
            if event.key == pygame.K_DOWN:
                if not main_game.snake.direction == Vector2(0,-1):
                    main_game.snake.direction = Vector2(0,1)
            if event.key == pygame.K_LEFT:
                if not main_game.snake.direction == Vector2(1,0):
                    main_game.snake.direction = Vector2(-1,0)
            if event.key == pygame.K_RIGHT:
                if not main_game.snake.direction == Vector2(-1,0):
                    main_game.snake.direction = Vector2(1,0)
        
    screen.fill((120,40,5))
    main_game.draw_new()
    pygame.display.update()
    clock.tick(60)
